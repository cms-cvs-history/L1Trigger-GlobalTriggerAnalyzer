//
// cfg file to pack (DigiToRaw) a GT DAQ record, unpack (RawToDigi) it back
// and compare the two set of digis
//

process TestGtPackUnpackAnalyzer = {

    // source file: GT produced file, with GMT and GCT records included 
    source = PoolSource {
        untracked vstring fileNames = {
            'file:/afs/cern.ch/user/g/ghete/scratch0/CmsswTestFiles/testGt_PackUnpackAnalyzer_source.root'
        }
    }   

    untracked PSet maxEvents = { untracked int32 input = 10 }

    
    // load and configure modules
    
    // L1 GT EventSetup
    include "L1TriggerConfig/L1GtConfigProducers/data/L1GtConfig.cff"

    // L1 GMT EventSetup
    include "L1TriggerConfig/L1ScalesProducers/data/L1MuTriggerScalesConfig.cff"
    include "L1TriggerConfig/L1ScalesProducers/data/L1MuGMTScalesConfig.cff"
    include "L1TriggerConfig/GMTConfigProducers/data/L1MuGMTParametersConfig.cff"   
    

    //
    // pack.........
    //
    
    include "EventFilter/L1GlobalTriggerRawToDigi/data/l1GtPack.cfi"

    // input tag for GT readout record: 
    //     gtDigis         = GT emulator (default)
    //     l1GtUnpack      = GT unpacker 

    //replace l1GtPack.DaqGtInputTag = l1GtUnpack
    
    // input tag for GMT readout collection: 
    //     gmtDigis       = GMT emulator (default)
    //     l1GtUnpack     = GT unpacker 

    //replace l1GtPack.MuGmtInputTag = l1GtUnpack

    /// mask for active boards (actually 16 bits)
    //      if bit is zero, the corresponding board will not be packed
    //      default: no board masked: ActiveBoardsMask = 0xFFFF

    // no board masked (default)
    //replace l1GtPack.ActiveBoardsMask = 0xFFFF
    
    // GTFE only in the record
    //replace l1GtPack.ActiveBoardsMask = 0x0000

    // GTFE + FDL 
    //replace l1GtPack.ActiveBoardsMask = 0x0001
     
    // GTFE + GMT 
    //replace l1GtPack.ActiveBoardsMask = 0x0100

    // GTFE + FDL + GMT 
    //replace l1GtPack.ActiveBoardsMask = 0x0101


    //
    // unpack.......
    //


    module gtPackedUnpack = l1GtUnpack from "EventFilter/L1GlobalTriggerRawToDigi/data/l1GtUnpack.cfi"

    // input tag for GT and GMT readout collections in the packed data: 
    replace gtPackedUnpack.DaqGtInputTag = l1GtPack

    // Active Boards Mask

    // no board masked (default)
    //replace gtPackedUnpack.ActiveBoardsMask = 0xFFFF
    
    // GTFE only in the record
    //replace gtPackedUnpack.ActiveBoardsMask = 0x0000

    // GTFE + FDL 
    //replace gtPackedUnpack.ActiveBoardsMask = 0x0001
     
    // GTFE + GMT 
    //replace gtPackedUnpack.ActiveBoardsMask = 0x0100

    // GTFE + FDL + GMT 
    //replace gtPackedUnpack.ActiveBoardsMask = 0x0101

    // BxInEvent to be unpacked
    // all available BxInEvent (default)
    //replace gtPackedUnpack.UnpackBxInEvent = -1 

    // BxInEvent = 0 (L1A)
    //replace gtPackedUnpack.UnpackBxInEvent = 1 

    // 3 BxInEvent (F, 0, 1)  
    //replace gtPackedUnpack.UnpackBxInEvent = 3 

    
    //
    // compare the initial and final digis .......
    //
    
    include "L1Trigger/GlobalTriggerAnalyzer/data/l1GtPackUnpackAnalyzer.cfi"

    // input tag for the initial GT DAQ record: must match the pack label
    //     GT emulator:  gtDigis (default) 
    //     GT unpacker:  l1GtUnpack  
    //replace l1GtPackUnpackAnalyzer.InitialDaqGtInputTag = gtDigis

    // input tag for the initial GMT readout collection: must match the pack label 
    //     gmtDigis       = GMT emulator (default)
    //     l1GtUnpack     = GT unpacker 
    replace l1GtPackUnpackAnalyzer.InitialMuGmtInputTag = gmtDigis

    // input tag for the final GT DAQ and GMT records:  must match the unpack label 
    //     GT unpacker:  gtPackedUnpack (cloned unpacker from L1GtPackUnpackAnalyzer.cfg)
    //replace l1GtPackUnpackAnalyzer.FinalGtGmtInputTag = gtPackedUnpack

    //
    // module list
    //
    
    path p = { l1GtPack, gtPackedUnpack, l1GtPackUnpackAnalyzer }

    // uncomment / comment messages with DEBUG mode to run in / without DEBUG mode
    service = MessageLogger {

      untracked vstring destinations =  {"testGt_PackUnpackAnalyzer"}
      untracked PSet testGt_PackUnpackAnalyzer = { 
         //untracked string threshold = "DEBUG"                  // DEBUG mode 
         //untracked PSet DEBUG = { untracked int32 limit = -1}  // DEBUG mode, all messages  
         //untracked PSet DEBUG = { untracked int32 limit = 10}  // DEBUG mode, max 10 messages  
          untracked PSet INFO = { untracked int32 limit = -1}    
      }
      
      // DEBUG mode 
      //untracked vstring debugModules = { "l1GtPack", "l1GtUnpack", "l1GtPackUnpackAnalyzer" }
      
    }
        
    module outputL1GtPackUnpack = PoolOutputModule { 

        // keep only emulated data, packed data, unpacked data in the ROOT file
        untracked vstring outputCommands = {
            "drop *",
            "keep *_gtDigis_*_*",
            "keep *_gmtDigis_*_*",
            "keep *_l1GtPack_*_*",
            "keep *_l1GtPackedUnpack_*_*"
        }

        untracked string fileName = "testGt_PackUnpackAnalyzer_output.root" 
    }
    endpath outpath = { outputL1GtPackUnpack }
    
            
}
